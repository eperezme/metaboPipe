DE = do_query('study','analysis_id','ST000336','DatasetExperiment')
context_outputs('study')
context_outputs('analysis_id')
context_inputs('study')
context_outputs('study')
do_query(context = "study", input_item = "ignored", input_value = "ignored", output_item = "DatasetExperiment")
do_query(
context = 'study',
input_item = 'ignored',
input_value = 'ignored',
output_item = 'untarg_studies'
)
US= do_query(
context = 'study',
input_item = 'ignored',
input_value = 'ignored',
output_item = 'untarg_studies'
)
t(S)
context_outputs('study')
S = do_query('study','study_id','ST000336','analysis')
S
t(S)
context_outputs('study')
do_query(context = "study", input_item = "study_id", input_value = "ST000336", output_item = "SummarizedExperiment")
Experimetn1 <- do_query(context = "study", input_item = "study_id", input_value = "ST000336", output_item = "SummarizedExperiment")
View(Experimetn1)
Experimetn1[["AN004436"]]
print(t(do_query(context = "study", input_item = "study_id", input_value = "ST000336", output_item = "analysis")))
View(st000336)
st000336
experimentData(st000336)
View(st000336)
st000336@assayData[["exprs"]]
st000336@assayData[["exprs"]]
getOption("max.print")
options(max.print = 5000)
st000336@assayData[["exprs"]]
Experimetn1[["AN004436"]]@assays@data@listData[[1]]
Experimetn1[["AN004437"]]@assays@data@listData[[1]]
st000336@assayData[["exprs"]]
print(t(do_query(context = "study", input_item = "study_id", input_value = "ST000336", output_item = "analysis")))
DE <- do_query('study','analysis_id','AN004436','DatasetExperiment')
DE <- do_query('study','analysis_id','AN004436','DatasetExperiment')
DE
SE <- do_query(context = "study", input_item = "analysis_id", input_value = "AN004436", output_item = "SummarizedExperiment")
SEDE <- as.DatasetExperiment(SE)
View(SEDE)
View(DE)
colData(DE)
DE <- do_query(context = "study", input_item = "analysis_id", input_value = "AN004436", output_item = "DatasetExperiment")
colData(DE)
rowData(DE)
View(rowData(DE))
rowData(DE)@rownames
rowData(DE)@listData[["Diagnosis"]]
rowData(DE)@listData[["steroid_status"]]
assay(DE)
devtools::install_github(repo="krumsieklab/maplet@v1.2.1", subdir="maplet")
library(maplet)
library(tidyverse)
E <-
mt_load_metabolomics_workbench(
study_id = "ST000336",
analysis_id = "AN004436"
) %>%
mt_anno_rename(anno_type = "features", old_col_names = "Metabolite", new_col_names = "name") %>%
mt_clean_validate_se() %>%
# # log assay dimensions and number of columns for both metabolite and clincial annotations
mt_reporting_data() %>%
# start timing
mt_reporting_tic() %>%
{.}
View(DE)
E <-
mt_load_metabolomics_workbench(
study_id = "ST000336",
analysis_id = "AN004436"
) %>%
mt_anno_rename(anno_type = "features", old_col_names = "Metabolite", new_col_names = "name") %>%
# mt_clean_validate_se() %>%
# # log assay dimensions and number of columns for both metabolite and clincial annotations
mt_reporting_data() %>%
# start timing
mt_reporting_tic() %>%
{.}
View(E)
E <-
mt_load_metabolomics_workbench(
study_id = "ST000336",
analysis_id = "AN004436"
) %>%
mt_anno_rename(anno_type = "features", old_col_names = "Metabolite", new_col_names = "name") %>%
# mt_clean_validate_se() %>%
# # log assay dimensions and number of columns for both metabolite and clincial annotations
mt_reporting_data() %>%
# start timing
mt_reporting_tic() %>%
{.}
rownames(D)
colnames(D)
rownames(E)
library(targets)
tar_visnetwork()
tar_make()
tar_make()
library(structToolbox)
tar_make()
tar_edit()
tar_make()
source("C:/Users/eduar/Desktop/TFM/Work/R/filter.R")
source("C:/Users/eduar/Desktop/TFM/Work/R/filter.R")
tar_make()
source("C:/Users/eduar/Desktop/TFM/Work/R/filter.R")
tar_make()
source("C:/Users/eduar/Desktop/TFM/Work/R/filter.R")
tar_make()
tar_make()
tar_load(blank_filtered)
View(blank_filtered)
assay(blank_filtered)
library(SummarizedExperiment)
assay(blank_filtered)
View(blank_filtered)
colData(blank_filter())
colData(blank_filtered)
rowData(blank_filtered)
tar_make()
tar_load(blank_filtered)
assay(blank_filtered)
View(blank_filtered)
rowData(blank_filtered)
tar_make()
# Signal drift and batch correction
batch_correction <- function(dataset_exp, order_col, batch_col, qc_col, qc_label) {
M <- sb_corr(
order_col = order_col,
batch_col = batch_col,
qc_col = qc_col,
qc_label = qc_label,
# spar_lim = c(0.6,0.8)
)
M <- model_apply(M, dataset_exp)
return(predicted(M))
### THIS IS FOR PLOTING THE SIGNAL DRIFT AND BATCH CORRECTION #### \
# BUT WE COULD USE A PCA PLOT INSTEAD
# C = feature_profile(
#   run_order=order_col,
#   qc_label=qc_label,
#   qc_column=qc_col,
#   colour_by='batch_qc',
#   feature_to_plot=,
#   plot_sd=FALSE
# )
}
batch_correction(blank_filtered,
order_col = "order",
batch_col = "biol.batch",
qc_col = "sample_type",
qc_label = 'QC')
assay(batch_correction(blank_filtered,
+ order_col = "order",
sb_corrected <- batch_correction(blank_filtered,
+ order_col = "order",
# DE
# A <- rsd_filter(rsd_threshold = 20, qc_label= "QC", factor_name = "condition")
# A <- model_apply(A,DE)
#
# filtered <- predicted(A)
# filtered
sb_corrected<- batch_correction(blank_filtered,
order_col = "order",
batch_col = "biol.batch",
qc_col = "sample_type",
qc_label = 'QC')
View(sb_corrected)
assay(sb_corrected)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
install.packages(c("biglm", "dplyr", "ggplot2", "readr", "targets", "tidyr"))
source("C:/Users/eduar/Desktop/TFM/Work/R/filter.R")
tar_read()
tar_read(blank_filtered)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
library(targets)
library(targets)
tar_unscript()
dataMatrixPath <- "data/dataMatrix.csv"
sampleMetadataPath <- "data/sampleMetadata.csv"
variableMetadataPath <- "data/variableMetadata.csv"
library(targets)
library(tarchetypes)
dataMatrixPath <- "data/dataMatrix.csv"
sampleMetadataPath <- "data/sampleMetadata.csv"
variableMetadataPath <- "data/variableMetadata.csv"
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
library(targets)
library(tarchetypes)
tar_unscript()
dataMatrixPath <- "data/dataMatrix.csv"
sampleMetadataPath <- "data/sampleMetadata.csv"
variableMetadataPath <- "data/variableMetadata.csv"
View(fit)
View(experiment)
library(SummarizedExperiment)
assay(experiment$data)
tar_make()
library(tarchetypes)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
library(targets)
library(tarchetypes)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
library(targets)
tar_make()
targets::tar_meta(fields = warnings, complete_only = TRUE)
tar_make()
tar_load(blank_filtered)
View(blank_filtered)
blank_filtered@assays@data@listData[[1]]
#| label: load
#| message: false
targets::tar_load(na_experiment)
targets::tar_load(filtered_experiment)
source("./R/Plots.R")
#| label: results-stats
missing_values_plot(na_experiment)
missing_values_plot(filtered_experiment)
#| label: missing-values
missing_values_plot(na_experiment)
missing_values_plot(filtered_experiment)
sample_missing_values_plot(na_experiment)
#| label: load
#| message: false
targets::tar_load(na_experiment)
targets::tar_load(filtered_experiment)
source("./R/Plots.R")
#| label: missing-values
missing_values_plot(na_experiment)
missing_values_plot(filtered_experiment)
sample_missing_values_plot(na_experiment)
#| label: load
#| message: false
targets::tar_load(na_experiment)
targets::tar_load(filtered_experiment)
source("./R/Plots.R")
#| label: missing-values
missing_values_plot(na_experiment)
missing_values_plot(filtered_experiment)
sample_missing_values_plot(na_experiment)
#| label: load
#| message: false
targets::tar_load(na_experiment)
targets::tar_load(experiment)
targets::tar_load(filtered_experiment)
source("./R/Plots.R")
sample_missing_values_plot(experiment)
missing_values_plot(experiment)
library(structToolbox)
sample_missing_values_plot(experiment)
sample_missing_values_plot(na_experiment)
source("C:/Users/eduar/Desktop/TFM/Work/R/Plots.R")
sample_missing_values_plot(na_experiment)
tar_make()
tar_make()
tar_load(batch_corrected)
assay(batch_corrected)
tar_load(knn_imputed)
assay(knn_imputed)
assay(batch_corrected)
rowData(knn_imputed)
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
targets::tar_meta(fields = warnings, complete_only = TRUE)
targets::tar_meta(fields = warnings, complete_only = TRUE)
tar_make()
tar_load(knn_imputed)
assay(knn_imputed)
rowData(knn_imputed)
tar_make()
targets::tar_meta(fields = warnings, complete_only = TRUE)
tar_load(batch_corrected)
assay(batch_corrected)
tar_make()
tar_load(batch_corrected)
assay(batch_corrected)
tar_make()
tar_make()
library(pmp)
tar_load(filtered_experiment)
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_make()
tar_load(batch_corrected)
assay(batch_corrected)
library(targets)
tar_make()
tar_load(batch_corrected)
View(batch_corrected)
batch_corrected@assays@data
batch_corrected@NAMES
batch_corrected@assays@data@listData[[1]]
#### Extract dataMatrix ####
data.extract <- function(dataset_exp) {
return(SummarizedExperiment::assay(dataset_exp))
}
#### Extract sampleMetadata ####
sample.data.extract <- function(dataset_exp) {
return(dataset_exp$sample_meta)
}
#### Extract variableMetadata ####
variable.data.extract <- function(dataset_exp) {
return(dataset_exp$variable_meta)
}
data.extract(batch_corrected)
sample.data.extract(batch_corrected)
variable.data.extract(batch_corrected)
data.modify <- function(dataset_exp, data) {
SummarizedExperiment::assay(dataset_exp, withDimnames = FALSE) <- data
return(dataset_exp)
}
tar_load(filtered_experiment)
filtered_experiment
batch_corrected
a <- data.extract(filtered_experiment)
b <- data.extract(batch_corrected)
c <- data.modify(batch_corrected, a)
d <- data.extract(batch_corrected)
a
b
c
d
targets::tar_load(filtered_experiment)
View(filtered_experiment)
library(metabolomicsWorkbenchR)
context_outputs('study')
US = do_query(
context = 'study',
input_item = 'study_id',
input_value = 'ST000450',
output_item = 'summary'
)
US
US = do_query(
context = 'study',
input_item = 'study_id',
input_value = 'ST000450',
output_item = 'analysis'
)
US
US
US
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN000705',
output_item = 'DatasetExperiment'
)
DE
assay(DE)
libray(structoolbox)
libray(structToolbox)
library(structToolbox)
assay(DE)
library(SummarizedExperiment)
assay(DE)
View(DE)
DE@assays@data@listData[[1]]
DE@NAMES
DE@colData@listData[["metabolite"]]
DE@elementMetadata@listData[["Disease"]]
US = do_query(
context = 'study',
input_item = 'study_id',
input_value = 'ST000996',
output_item = 'analysis'
)
US
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN001625',
output_item = 'DatasetExperiment'
)
DE
assay(DE)
View(DE)
DE@NAMES
DE@elementMetadata@listData[["Grouping"]]
DE@colData@listData[["metabolite"]]
US = do_query(
context = 'study',
input_item = 'study_id',
input_value = 'ST002389',
output_item = 'analysis'
)
US
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN003893',
output_item = 'DatasetExperiment'
)
DE
assay(DE)
US = do_query(
context = 'study',
input_item = 'study_id',
input_value = 'ST001978',
output_item = 'analysis'
)
US
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN003226',
output_item = 'DatasetExperiment'
)
DE
assay(DE)
options(max.print = 50000)
assay(DE)
assay(DE)
DE
colData(DE)
rowData(DE)
US = do_query(
context = 'study',
input_item = 'study_id',
input_value = 'ST002269',
output_item = 'analysis'
)
US
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN003706',
output_item = 'DatasetExperiment'
)
DE
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN003707',
output_item = 'DatasetExperiment'
)
DE
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN003708',
output_item = 'DatasetExperiment'
)
DE
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN003709',
output_item = 'DatasetExperiment'
)
DE
View(DE)
assay(DE)
colData(DE)
rowData(DE)
US = do_query(
context = 'study',
input_item = 'study_id',
input_value = 'ST002945',
output_item = 'analysis'
)
US
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN004830',
output_item = 'DatasetExperiment'
)
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN004830',
output_item = 'DatasetExperiment'
)
US = do_query(
context = 'study',
input_item = 'study_id',
input_value = 'ST000868',
output_item = 'analysis'
)
US
DE = do_query(
context = 'study',
input_item = 'analysis_id',
input_value = 'AN001416',
output_item = 'DatasetExperiment'
)
DE
assay(DE)
colData(DE)
rowData(DE)
