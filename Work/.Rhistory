# path = tempfile()
# temp = tempdir()
# download.file(zipfile,path)
# unzip
unzip(zipfile=path, files = "LC_MS_raw_data.xlsx", exdir=temp)
# read samples
data <- as.data.frame(read.xlsx(file.path(temp,"LC_MS_raw_data.xlsx"),sheet = 'Data'))
library(targets)
source("R/*")
source("R/*.R")
source("R/")
source("R")
getwd()
renv::status()
renv::status()
renv::snapshot()
# _targets.R file:
library(targets)
# Load all R scripts in the R/ directory.
file.sources <- list.files("R", pattern = "*.R")
sapply(file.sources, source, .GlobalEnv)
# Load all R scripts in the R/ directory.
file.sources <- list.files("R", pattern = "*.R", full.names=TRUE)
sapply(file.sources, source, .GlobalEnv)
source("C:/Users/eduar/Desktop/TFM/Work/R/imputation.R")
source("C:/Users/eduar/Desktop/TFM/Work/R/createExperiment.R")
# Load all R scripts in the R/ directory.
file.sources <- list.files("R", pattern = "*.R", full.names=TRUE)
sapply(file.sources, source, .GlobalEnv)
source("C:/Users/eduar/Desktop/TFM/Work/R/imputation.R")
source("C:/Users/eduar/Desktop/TFM/Work/R/filter.R")
source("C:/Users/eduar/Desktop/TFM/Work/R/filter.R")
# Load all R scripts in the R/ directory.
file.sources <- list.files("R", pattern = "*.R", full.names=TRUE)
sapply(file.sources, source, .GlobalEnv)
# Load all R scripts in the R/ directory.
file.sources <- list.files("R", pattern = "*.R", full.names=TRUE)
sapply(file.sources, source, .GlobalEnv)
sapply(file.sources, source)
renv::dependencies()
renv::dependencies()
renv::dependencies()
pack <- renv::dependencies()
View(pack)
pack$Package
a <- pack$Package
print(a)
cat(a)
cat(paste(shQuote(a, type="cmd"), collapse=", "))
# To create a list with all the libraries to copypaste:
cat(paste(shQuote(renv::dependencies()$Package, type="cmd"), collapse=", "))
View(pack)
cat(paste(shQuote(renv::dependencies()$Package %>% dplyr::distinct(), type="cmd"), collapse=", "))
cat(paste(shQuote(renv::dependencies(path = "R")$Package %>% dplyr::distinct(), type="cmd"), collapse=", "))
cat(paste(shQuote(renv::dependencies(path = "R")$Package, type="cmd"), collapse=", "))
renv::dependencies(path = "R")
renv::dependencies(path = "R") %>% dplyr::distinct()
renv::dependencies(path = "R") %>% dplyr::distinct(Package)
d
cat(paste(shQuote(renv::dependencies(path = "R") %>% dplyr::distinct(Package), type="cmd"), collapse=", "))
cat(paste(shQuote(renv::dependencies() %>% dplyr::distinct(Package), type="cmd"), collapse=", "))
renv::dependencies() %>% dplyr::distinct(Package)
renv::dependencies(path = "R") %>% dplyr::distinct(Package)
b <- renv::dependencies(path = "R") %>% dplyr::distinct(Package)
View(b)
print(b)
cat(paste(shQuote(unique(renv::dependencies()$Package), type="cmd"), collapse=", "))
cat(paste(shQuote(unique(renv::dependencies(path = "R")$Package), type="cmd"), collapse=", "))
# use the BiocFileCache
bfc <- BiocFileCache(ask = FALSE)
# path to zip
zipfile = "https://raw.github.com/STATegraData/STATegraData/master/Script_STATegra_Metabolomics.zip"
## retrieve from BiocFileCache
path = bfcrpath(bfc,zipfile)
temp = bfccache(bfc)
# unzip
unzip(zipfile=path, files = "LC_MS_raw_data.xlsx", exdir=temp)
# read samples
data <- as.data.frame(read.xlsx(file.path(temp,"LC_MS_raw_data.xlsx"),sheet = 'Data'))
View(data)
# Save data as a csv file
write.csv(data, file = "data.csv")
targets::tar_make()
# Load all R scripts in the R/ directory.
file.sources <- list.files("R", pattern = "*.R", full.names=TRUE)
sapply(file.sources, source, .GlobalEnv)
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
targets::tar_visnetwork()
tar_manifest()
tar_read(predata)
targets::tar_make()
tar_read(predata)
tar_read(X)
tar_read(predata$X)
tar_read(predata)
tar_read(predata$X)
tar_read(predata$x)
tar_read(predata$SM)
tar_make()
tar_make()
tar_read(predata)
tar_read(predata)
tar_make()
install.packages("arrow")
status()
renv::status()
renv::snapshot()
tar_make()
tar_visnetwork()
tar_visnetwork()
tar_make()
tar_make()
suppressPackageStartupMessages({
# Bioconductor packages
library(SummarizedExperiment)
library(structToolbox)
library(pmp)
library(ropls)
library(BiocFileCache)
# CRAN libraries
library(ggplot2)
library(gridExtra)
library(cowplot)
library(openxlsx)
library(VIM)
library(dplyr)
})
# use the BiocFileCache
bfc <- BiocFileCache(ask = FALSE)
# path to zip
zipfile = "https://raw.github.com/STATegraData/STATegraData/master/Script_STATegra_Metabolomics.zip"
## retrieve from BiocFileCache
path = bfcrpath(bfc,zipfile)
temp = bfccache(bfc)
# unzip
unzip(zipfile=path, files = "LC_MS_raw_data.xlsx", exdir=temp)
# read samples
data <- as.data.frame(read.xlsx(file.path(temp,"LC_MS_raw_data.xlsx"),sheet = 'Data'))
# Create SampleMetadata dataframe
SM <- data[,1:7]
SM$sample_id = SM$label
# Define QC and blank samples
blanks=c(1,2,33,34,65,66)
QCs=c(3,4,11,18,25,32,35,36,43,50,57,64)
SM$sample_type = "Sample"
SM$sample_type[blanks] = "Blank"
SM$sample_type[QCs] = "QC"
# Create variableMetadata object
VM = data.frame('annotation'=colnames(data)[8:ncol(data)])
# Create the raw data matrix
X = data[,8:ncol(data)]
X$sample_id = SM$sample_id
# Create the experiment
DE <- createExperiment(X, SM, VM, "LCMS Raw test", "Description Test")
write.csv(X, file = "dataMatrix.csv")
write.csv(SM, file = "sampleMetadata.csv")
write.csv(VM, file = "variableMetadata.csv")
tar_visnetwork()
source("C:/Users/eduar/Desktop/TFM/Work/R/createExperiment.R")
tar_make()
?tar_pipeline
tar_visnetwork()
tar_visnetwork()
tar_make()
tar_visnetwork()
tar_read(sampleMetadata)
tar_read(dataMatrix)
tar_read(variableMetadata)
## install additional bioc packages for vignette if needed
# BiocManager::install(c('pmp', 'ropls', 'BiocFileCache'))
## install additional CRAN packages if needed
# install.packages(c('cowplot', 'openxlsx'))
suppressPackageStartupMessages({
# Bioconductor packages
library(SummarizedExperiment)
library(structToolbox)
library(pmp)
library(ropls)
library(BiocFileCache)
# CRAN libraries
library(ggplot2)
library(gridExtra)
library(cowplot)
library(openxlsx)
library(VIM)
library(dplyr)
})
# use the BiocFileCache
bfc <- BiocFileCache(ask = FALSE)
# path to zip
zipfile = "https://raw.github.com/STATegraData/STATegraData/master/Script_STATegra_Metabolomics.zip"
## retrieve from BiocFileCache
path = bfcrpath(bfc,zipfile)
temp = bfccache(bfc)
## ... or download to temp location
# path = tempfile()
# temp = tempdir()
# download.file(zipfile,path)
# unzip
unzip(zipfile=path, files = "LC_MS_raw_data.xlsx", exdir=temp)
# read samples
data <- as.data.frame(read.xlsx(file.path(temp,"LC_MS_raw_data.xlsx"),sheet = 'Data'))
# extract sample meta data (Cols 1 to 8)
SM = data[ ,1:8]
# add coloumn for sample type (QC, blank etc)
# Add blanks id
blanks=c(1,2,33,34,65,66)
# add QC id
QCs=c(3,4,11,18,25,32,35,36,43,50,57,64)
# add sample type
SM$sample_type='Sample'
# add blanks
SM$sample_type[blanks]='Blank'
# add QCs
SM$sample_type[QCs]='QC'
# put qc/blank labels in all factors for plotting later
SM$biol.batch[SM$sample_type!='Sample']=SM$sample_type[SM$sample_type!='Sample']
SM$time.point[SM$sample_type!='Sample']=SM$sample_type[SM$sample_type!='Sample']
SM$condition[SM$sample_type!='Sample']=SM$sample_type[SM$sample_type!='Sample']
# convert to factors
SM$biol.batch=ordered(SM$biol.batch,c('9','10','11','12','QC','Blank'))
SM$time.point=ordered(SM$time.point,c('0h','2h','6h','12h','18h','24h','QC','Blank'))
SM$condition=factor(SM$condition)
SM$sample_type=factor(SM$sample_type)
# variable meta data
# Use the colnames of the data as the variable meta data
colnames(data)=gsub("-", "_", colnames(data))
VM = data.frame('annotation'=colnames(data)[9:ncol(data)])
# Create the raw data matrix
X = data[,9:ncol(data)]
# convert 0 to NA
X[X==0]=NA
# force to numeric; any non-numerics will become NA
X=data.frame(lapply(X,as.numeric),check.names = FALSE)
# make sure row/col names match
rownames(X)=data$label
rownames(SM)=data$label
rownames(VM)=colnames(X)
# create DatasetExperiment object
DE = DatasetExperiment(
data = X,
sample_meta = SM,
variable_meta = VM,
name = 'STATegra Metabolomics LCMS',
description = 'https://www.nature.com/articles/s41597-019-0202-7'
)
DE
View(X)
tar_read(dataMatrix)
suppressPackageStartupMessages({
# Bioconductor packages
library(SummarizedExperiment)
library(structToolbox)
library(pmp)
library(ropls)
library(BiocFileCache)
# CRAN libraries
library(ggplot2)
library(gridExtra)
library(cowplot)
library(openxlsx)
library(VIM)
library(dplyr)
})
# use the BiocFileCache
bfc <- BiocFileCache(ask = FALSE)
# path to zip
zipfile = "https://raw.github.com/STATegraData/STATegraData/master/Script_STATegra_Metabolomics.zip"
## retrieve from BiocFileCache
path = bfcrpath(bfc,zipfile)
temp = bfccache(bfc)
## ... or download to temp location
# path = tempfile()
# temp = tempdir()
# download.file(zipfile,path)
# unzip
unzip(zipfile=path, files = "LC_MS_raw_data.xlsx", exdir=temp)
# read samples
data <- as.data.frame(read.xlsx(file.path(temp,"LC_MS_raw_data.xlsx"),sheet = 'Data'))
# Save data as a csv file
# write.csv(data, file = "data.csv")
##### PREPARING DATA FOR EXPERIMENT ######
# Create SampleMetadata dataframe
SM <- data[,1:7]
SM$sample_id = SM$label
# Define QC and blank samples
blanks=c(1,2,33,34,65,66)
QCs=c(3,4,11,18,25,32,35,36,43,50,57,64)
SM$sample_type = "Sample"
SM$sample_type[blanks] = "Blank"
SM$sample_type[QCs] = "QC"
# Create variableMetadata object
VM = data.frame('annotation'=colnames(data)[8:ncol(data)])
# Create the raw data matrix
X = data[,8:ncol(data)]
X$sample_id = SM$sample_id
# Save data as csv files
# write.csv(X, file = "dataMatrix.csv")
# write.csv(SM, file = "sampleMetadata.csv")
# write.csv(VM, file = "variableMetadata.csv")
# Create the experiment
DE <- createExperiment(X, SM, VM, "LCMS Raw test", "Description Test")
DE
suppressPackageStartupMessages({
# Bioconductor packages
library(SummarizedExperiment)
library(structToolbox)
library(pmp)
library(ropls)
library(BiocFileCache)
# CRAN libraries
library(ggplot2)
library(gridExtra)
library(cowplot)
library(openxlsx)
library(VIM)
library(dplyr)
})
# use the BiocFileCache
bfc <- BiocFileCache(ask = FALSE)
# path to zip
zipfile = "https://raw.github.com/STATegraData/STATegraData/master/Script_STATegra_Metabolomics.zip"
## retrieve from BiocFileCache
path = bfcrpath(bfc,zipfile)
temp = bfccache(bfc)
## ... or download to temp location
# path = tempfile()
# temp = tempdir()
# download.file(zipfile,path)
# unzip
unzip(zipfile=path, files = "LC_MS_raw_data.xlsx", exdir=temp)
# read samples
data <- as.data.frame(read.xlsx(file.path(temp,"LC_MS_raw_data.xlsx"),sheet = 'Data'))
# Save data as a csv file
# write.csv(data, file = "data.csv")
##### PREPARING DATA FOR EXPERIMENT ######
# Create SampleMetadata dataframe
SM <- data[,1:7]
SM$sample_id = SM$label
# Define QC and blank samples
blanks=c(1,2,33,34,65,66)
QCs=c(3,4,11,18,25,32,35,36,43,50,57,64)
SM$sample_type = "Sample"
SM$sample_type[blanks] = "Blank"
SM$sample_type[QCs] = "QC"
# Create variableMetadata object
VM = data.frame('annotation'=colnames(data)[8:ncol(data)])
# Create the raw data matrix
X = data[,8:ncol(data)]
X$sample_id = SM$sample_id
# Save data as csv files
write.csv(X, file = "data/dataMatrix.csv", row.names = FALSE)
suppressPackageStartupMessages({
# Bioconductor packages
library(SummarizedExperiment)
library(structToolbox)
library(pmp)
library(ropls)
library(BiocFileCache)
# CRAN libraries
library(ggplot2)
library(gridExtra)
library(cowplot)
library(openxlsx)
library(VIM)
library(dplyr)
})
# use the BiocFileCache
bfc <- BiocFileCache(ask = FALSE)
# path to zip
zipfile = "https://raw.github.com/STATegraData/STATegraData/master/Script_STATegra_Metabolomics.zip"
## retrieve from BiocFileCache
path = bfcrpath(bfc,zipfile)
temp = bfccache(bfc)
## ... or download to temp location
# path = tempfile()
# temp = tempdir()
# download.file(zipfile,path)
# unzip
unzip(zipfile=path, files = "LC_MS_raw_data.xlsx", exdir=temp)
# read samples
data <- as.data.frame(read.xlsx(file.path(temp,"LC_MS_raw_data.xlsx"),sheet = 'Data'))
# Save data as a csv file
# write.csv(data, file = "data.csv")
##### PREPARING DATA FOR EXPERIMENT ######
# Create SampleMetadata dataframe
SM <- data[,1:7]
SM$sample_id = SM$label
# Define QC and blank samples
blanks=c(1,2,33,34,65,66)
QCs=c(3,4,11,18,25,32,35,36,43,50,57,64)
SM$sample_type = "Sample"
SM$sample_type[blanks] = "Blank"
SM$sample_type[QCs] = "QC"
# Create variableMetadata object
VM = data.frame('annotation'=colnames(data)[8:ncol(data)])
# Create the raw data matrix
X = data[,8:ncol(data)]
X$sample_id = SM$sample_id
# Save data as csv files
write.csv(X, file = "data/dataMatrix.csv", row.names = FALSE)
# extract sample meta data (Cols 1 to 8)
SM = data[ ,1:8]
# add coloumn for sample type (QC, blank etc)
# Add blanks id
blanks=c(1,2,33,34,65,66)
# add QC id
QCs=c(3,4,11,18,25,32,35,36,43,50,57,64)
# add sample type
SM$sample_type='Sample'
# add blanks
SM$sample_type[blanks]='Blank'
# add QCs
SM$sample_type[QCs]='QC'
# put qc/blank labels in all factors for plotting later
SM$biol.batch[SM$sample_type!='Sample']=SM$sample_type[SM$sample_type!='Sample']
SM$time.point[SM$sample_type!='Sample']=SM$sample_type[SM$sample_type!='Sample']
SM$condition[SM$sample_type!='Sample']=SM$sample_type[SM$sample_type!='Sample']
# convert to factors
SM$biol.batch=ordered(SM$biol.batch,c('9','10','11','12','QC','Blank'))
SM$time.point=ordered(SM$time.point,c('0h','2h','6h','12h','18h','24h','QC','Blank'))
SM$condition=factor(SM$condition)
SM$sample_type=factor(SM$sample_type)
# variable meta data
# Use the colnames of the data as the variable meta data
colnames(data)=gsub("-", "_", colnames(data))
VM = data.frame('annotation'=colnames(data)[9:ncol(data)])
# Create the raw data matrix
X = data[,9:ncol(data)]
# convert 0 to NA
X[X==0]=NA
# force to numeric; any non-numerics will become NA
X=data.frame(lapply(X,as.numeric),check.names = FALSE)
# make sure row/col names match
rownames(X)=data$label
rownames(SM)=data$label
rownames(VM)=colnames(X)
# create DatasetExperiment object
DE = DatasetExperiment(
data = X,
sample_meta = SM,
variable_meta = VM,
name = 'STATegra Metabolomics LCMS',
description = 'https://www.nature.com/articles/s41597-019-0202-7'
)
DE
suppressPackageStartupMessages({
# Bioconductor packages
library(SummarizedExperiment)
library(structToolbox)
library(pmp)
library(ropls)
library(BiocFileCache)
# CRAN libraries
library(ggplot2)
library(gridExtra)
library(cowplot)
library(openxlsx)
library(VIM)
library(dplyr)
})
# use the BiocFileCache
bfc <- BiocFileCache(ask = FALSE)
# path to zip
zipfile = "https://raw.github.com/STATegraData/STATegraData/master/Script_STATegra_Metabolomics.zip"
## retrieve from BiocFileCache
path = bfcrpath(bfc,zipfile)
temp = bfccache(bfc)
## ... or download to temp location
# path = tempfile()
# temp = tempdir()
# download.file(zipfile,path)
# unzip
unzip(zipfile=path, files = "LC_MS_raw_data.xlsx", exdir=temp)
# read samples
data <- as.data.frame(read.xlsx(file.path(temp,"LC_MS_raw_data.xlsx"),sheet = 'Data'))
# Save data as a csv file
# write.csv(data, file = "data.csv")
##### PREPARING DATA FOR EXPERIMENT ######
# Create SampleMetadata dataframe
SM <- data[,1:7]
SM$sample_id = SM$label
# Define QC and blank samples
blanks=c(1,2,33,34,65,66)
QCs=c(3,4,11,18,25,32,35,36,43,50,57,64)
SM$sample_type = "Sample"
SM$sample_type[blanks] = "Blank"
SM$sample_type[QCs] = "QC"
# Create variableMetadata object
VM = data.frame('annotation'=colnames(data)[8:ncol(data)])
# Create the raw data matrix
X = data[,8:ncol(data)]
X$sample_id = SM$sample_id
# Save data as csv files
write.csv(X, file = "data/dataMatrix.csv", row.names = FALSE)
write.csv(SM, file = "data/sampleMetadata.csv", row.names = FALSE)
write.csv(VM, file = "data/variableMetadata.csv", row.names = FALSE)
tar_make()
tar_read(experiment)
tar_read(experiment)
tar_make()
tar_visnetwork()
tar_renv()
tar_renv()
renv::status()
renv::snapshot()
tar_renv()
